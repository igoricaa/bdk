/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type CookiePolicy = {
  _id: string;
  _type: "cookiePolicy";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  necessaryCookies?: TableSection;
  functionalCookies?: TableSection;
  analyticsCookies?: TableSection;
};

export type TableSection = {
  _type: "tableSection";
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  table: Table;
};

export type PrivacyNotice = {
  _id: string;
  _type: "privacyNotice";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  specificsOfDataProcessing: Array<{
    title: string;
    table: Table;
    _key: string;
  }>;
};

export type BlinkdraftSubscriptionPlan = {
  _type: "blinkdraftSubscriptionPlan";
  note: string;
  title: string;
  features: Array<{
    description: string;
    _key: string;
  }>;
};

export type OpenPosition = {
  _id: string;
  _type: "openPosition";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  location: string;
  pdfFile: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
};

export type CareerPage = {
  _id: string;
  _type: "careerPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  hero: CareerHeroSection;
  coursesSection: CoursesSection;
};

export type CoursesSection = {
  _type: "coursesSection";
  subtitle: string;
  title: string;
  courses?: Array<{
    title: string;
    readingTime: number;
    pdfFile?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      media?: unknown;
      _type: "file";
    };
    _type: "course";
    _key: string;
  }>;
};

export type CareerHeroSection = {
  _type: "careerHeroSection";
  heading: string;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  backgroundImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  openPositionsSection: {
    heading: string;
    openPositions: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "openPosition";
    }>;
  };
};

export type AboutUsPage = {
  _id: string;
  _type: "aboutUsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  hero: AboutUsHeroSection;
  independentReviews: IndependentReviewsSection;
};

export type IndependentReviewsSection = {
  _type: "independentReviewsSection";
  heading: string;
  description: string;
  reviews?: Array<{
    title: string;
    description: string;
    link: string;
    _type: "review";
    _key: string;
  }>;
};

export type AboutUsHeroSection = {
  _type: "aboutUsHeroSection";
  subtitle: string;
  heading: string;
  mainDescription: string;
  secondaryDescription: string;
  backgroundImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type PeoplePage = {
  _id: string;
  _type: "peoplePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  hero: PeopleHeroSection;
  newsroom: {
    subtitle: string;
    heading: string;
    description: string;
  };
};

export type PeopleHeroSection = {
  _type: "peopleHeroSection";
  heading: string;
  description: string;
};

export type Country = {
  _id: string;
  _type: "country";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  countryIllustration: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  address: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  email: string;
  phone?: string;
  note?: string;
};

export type Social = {
  _type: "social";
  name: string;
  slug: Slug;
  icons: {
    iconLight: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    iconDark: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  link: string;
};

export type GeneralInfo = {
  _id: string;
  _type: "generalInfo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  logo: {
    logoBlack: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    logoWhite: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  blinkdraftLogo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  servicesCategoryIllustrations: {
    servicesIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    practicesIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    industriesIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    foreignDesksIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  postCategoriesIllustrations: {
    bdknowledgeIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    blogIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    digitalWatchIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    insightsIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    publicationsIllustration: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  socials: Array<{
    _key: string;
  } & Social>;
  countries: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "country";
  }>;
};

export type HomePage = {
  _id: string;
  _type: "homePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  hero: HeroSection;
  about: AboutSection;
  team: TeamSection;
  newsroom: NewsroomSection;
  latestPosts: LatestPostsSection;
  blinkdraft: BlinkdraftSection;
};

export type BlinkdraftSection = {
  _type: "blinkdraftSection";
  heading: string;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
};

export type LatestPostsSection = {
  _type: "latestPostsSection";
  heading: string;
  subtitle: string;
  description: string;
};

export type NewsroomSection = {
  _type: "newsroomSection";
  heading: string;
  subtitle: string;
  description: string;
  buttonText: string;
};

export type TeamSection = {
  _type: "teamSection";
  heading: string;
  description: string;
};

export type AboutSection = {
  _type: "aboutSection";
  subtitle: string;
  animatedText: string;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  buttonText: string;
  backgroundIllustration: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type HeroSection = {
  _type: "heroSection";
  bgImages: {
    image1: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string;
      _type: "image";
    };
    image2: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string;
      _type: "image";
    };
  };
  heading: string;
  description: string;
};

export type ForeignDesk = {
  _id: string;
  _type: "foreignDesk";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  description?: {
    nativeDescription: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      _key: string;
    } & ExternalImage>;
    englishDescription: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      _key: string;
    } & ExternalImage>;
  };
  illustration?: Illustration;
  lawyers: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "lawyer";
  }>;
  publications?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  newsroom?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  latestBlogPost?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  bdkInsights?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
};

export type ExternalImage = {
  _type: "externalImage";
  url?: string;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  type: "lawyer" | "custom";
  lawyer?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "lawyer";
  };
  url?: string;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  parent?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  count?: number;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  date: string;
  modified: string;
  status: "publish" | "future" | "draft" | "pending" | "private" | "trash" | "auto-draft" | "inherit";
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  excerpt?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  featuredMedia?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  sticky?: boolean;
  authors: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "author";
  }>;
  categories: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  publications?: {
    url?: string;
    download?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      media?: unknown;
      _type: "file";
    };
  };
};

export type Industry = {
  _id: string;
  _type: "industry";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  illustration: Illustration;
  testimonials?: Array<{
    text: string;
    author: string;
    _type: "testimonial";
    _key: string;
  }>;
  lawyers: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "lawyer";
  }>;
  publications?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  newsroom?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  latestBlogPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  bdkInsights?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
};

export type Practice = {
  _id: string;
  _type: "practice";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  illustration: Illustration;
  testimonials?: Array<{
    text: string;
    author: string;
    _type: "testimonial";
    _key: string;
  }>;
  lawyers: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "lawyer";
  }>;
  publications?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  newsroom?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  latestBlogPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  bdkInsights?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
};

export type Illustration = {
  _type: "illustration";
  desktop?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  tablet?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  mobile?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Lawyer = {
  _id: string;
  _type: "lawyer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  title: string;
  category: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "lawyerCategory";
  };
  picture: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  contactInfo?: {
    email: string;
    phone: string;
    linkedin?: string;
  };
  bio: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ExternalImage>;
  testimonials?: Array<{
    text: string;
    author: string;
    _type: "testimonial";
    _key: string;
  }>;
};

export type LawyerCategory = {
  _id: string;
  _type: "lawyerCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  description?: string;
  order?: number;
  orderedLawyers?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "lawyer";
  }>;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote" | "highlighted";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "image";
  _key: string;
} | {
  _key: string;
} & ExternalImage>;

export type Table = {
  _type: "table";
  rows?: Array<{
    _key: string;
  } & TableRow>;
};

export type TableRow = {
  _type: "tableRow";
  cells?: Array<string>;
};

export type MuxVideoAsset = {
  _id: string;
  _type: "mux.videoAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  status?: string;
  assetId?: string;
  playbackId?: string;
  filename?: string;
  thumbTime?: number;
  data?: MuxAssetData;
};

export type MuxAssetData = {
  _type: "mux.assetData";
  resolution_tier?: string;
  upload_id?: string;
  created_at?: string;
  id?: string;
  status?: string;
  max_stored_resolution?: string;
  passthrough?: string;
  encoding_tier?: string;
  master_access?: string;
  aspect_ratio?: string;
  duration?: number;
  max_stored_frame_rate?: number;
  mp4_support?: string;
  max_resolution_tier?: string;
  tracks?: Array<{
    _key: string;
  } & MuxTrack>;
  playback_ids?: Array<{
    _key: string;
  } & MuxPlaybackId>;
  static_renditions?: MuxStaticRenditions;
};

export type MuxStaticRenditions = {
  _type: "mux.staticRenditions";
  status?: string;
  files?: Array<{
    _key: string;
  } & MuxStaticRenditionFile>;
};

export type MuxStaticRenditionFile = {
  _type: "mux.staticRenditionFile";
  ext?: string;
  name?: string;
  width?: number;
  bitrate?: number;
  filesize?: number;
  height?: number;
};

export type MuxPlaybackId = {
  _type: "mux.playbackId";
  id?: string;
  policy?: string;
};

export type MuxTrack = {
  _type: "mux.track";
  id?: string;
  type?: string;
  max_width?: number;
  max_frame_rate?: number;
  duration?: number;
  max_height?: number;
};

export type TranslationMetadata = {
  _id: string;
  _type: "translation.metadata";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array<{
    _key: string;
  } & InternationalizedArrayReferenceValue>;
  schemaTypes?: Array<string>;
};

export type InternationalizedArrayReferenceValue = {
  _type: "internationalizedArrayReferenceValue";
  value?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blinkdraft";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "subscriptionForm";
  };
};

export type SubscriptionForm = {
  _id: string;
  _type: "subscriptionForm";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  subscriptionType: {
    label: string;
    options: {
      full: string;
      package: string;
      individual: string;
    };
  };
  packageChoice: {
    label: string;
    options: {
      amendments: string;
      compliance: string;
      breaks: string;
      hiring?: string;
      termination: string;
    };
  };
  languageVersion: {
    label: string;
    options: {
      bilingual: string;
      serbian: string;
    };
  };
  contactDetails: {
    label: string;
    fields: {
      firstName: string;
      familyName: string;
      email: string;
      position: string;
      companyName: string;
      companyAddress: string;
      numUsers: string;
    };
  };
  submitButtonText: string;
  individualTemplates: {
    label: string;
    templateGroups: Array<{
      title: string;
      templateSubgroups: Array<{
        title: string;
        templateItems: Array<string>;
        _type: "templateSubgroup";
        _key: string;
      }>;
      _type: "templateGroup";
      _key: string;
    }>;
  };
  language?: string;
};

export type Blinkdraft = {
  _id: string;
  _type: "blinkdraft";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  heroSection: BlinkdraftHeroSection;
  demoSection: BlinkdraftDemoSection;
  whatIsSection: BlinkdraftWhatIsSection;
  subscriptionPlansSection: BlinkdraftSubscriptionPlansSection;
  ctaSection: BlinkdraftCtaSection;
  packageDetailsSection: BlinkdraftPackageDetailsSection;
  additionalFeaturesSection: BlinkdraftAdditionalFeaturesSection;
  language?: string;
};

export type BlinkdraftAdditionalFeaturesSection = {
  _type: "blinkdraftAdditionalFeaturesSection";
  title: string;
  additionalFeatures?: Array<{
    title: string;
    description: string;
    _key: string;
  }>;
};

export type BlinkdraftPackageDetailsSection = {
  _type: "blinkdraftPackageDetailsSection";
  heading: string;
  description?: string;
  packages?: Array<{
    title: string;
    features?: Array<{
      text: string;
      _key: string;
    }>;
    _key: string;
  }>;
};

export type BlinkdraftCtaSection = {
  _type: "blinkdraftCtaSection";
  heading: string;
  buttonText: string;
};

export type BlinkdraftSubscriptionPlansSection = {
  _type: "blinkdraftSubscriptionPlansSection";
  heading: string;
  subscriptionPlans: Array<{
    _key: string;
  } & BlinkdraftSubscriptionPlan>;
};

export type BlinkdraftWhatIsSection = {
  _type: "blinkdraftWhatIsSection";
  heading: string;
  description: Array<{
    title: string;
    description: string;
    _key: string;
  }>;
};

export type MuxVideo = {
  _type: "mux.video";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "mux.videoAsset";
  };
};

export type BlinkdraftDemoSection = {
  _type: "blinkdraftDemoSection";
  subtitle: string;
  heading: string;
  demoVideo?: {
    demoVideoId?: string;
    demoVideoAsset?: MuxVideo;
    demoVideoPoster?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
};

export type BlinkdraftHeroSection = {
  _type: "blinkdraftHeroSection";
  heading: string;
  buttons?: {
    requestFreeTrialButton: {
      text: string;
    };
    subscribeButton: {
      text: string;
    };
  };
  backgroundImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type InternationalizedArrayReference = Array<{
  _key: string;
} & InternationalizedArrayReferenceValue>;

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = CookiePolicy | TableSection | PrivacyNotice | BlinkdraftSubscriptionPlan | OpenPosition | CareerPage | CoursesSection | CareerHeroSection | AboutUsPage | IndependentReviewsSection | AboutUsHeroSection | PeoplePage | PeopleHeroSection | Country | Social | GeneralInfo | HomePage | BlinkdraftSection | LatestPostsSection | NewsroomSection | TeamSection | AboutSection | HeroSection | ForeignDesk | ExternalImage | Author | Category | Post | Industry | Practice | Illustration | Lawyer | LawyerCategory | BlockContent | Table | TableRow | MuxVideoAsset | MuxAssetData | MuxStaticRenditions | MuxStaticRenditionFile | MuxPlaybackId | MuxTrack | TranslationMetadata | InternationalizedArrayReferenceValue | SubscriptionForm | Blinkdraft | BlinkdraftAdditionalFeaturesSection | BlinkdraftPackageDetailsSection | BlinkdraftCtaSection | BlinkdraftSubscriptionPlansSection | BlinkdraftWhatIsSection | MuxVideo | BlinkdraftDemoSection | BlinkdraftHeroSection | InternationalizedArrayReference | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: src/app/api/search/all/route.ts
// Variable: GLOBAL_SEARCH_QUERY
// Query: *[_type in ["post", "lawyer", "industry", "practice", "foreignDesk"] && (      title match $searchQuery + "*" ||      name match $searchQuery + "*" ||      pt::text(content) match $searchQuery + "*"    )  ] | order(_score desc) [0...10] {    _id,    _type,    title,    "slug": slug.current,    "details": select(_type == "lawyer" => name, null)  }
export type GLOBAL_SEARCH_QUERYResult = Array<{
  _id: string;
  _type: "foreignDesk";
  title: string;
  slug: string;
  details: null;
} | {
  _id: string;
  _type: "industry";
  title: string;
  slug: string;
  details: null;
} | {
  _id: string;
  _type: "lawyer";
  title: string;
  slug: string;
  details: string;
} | {
  _id: string;
  _type: "post";
  title: string;
  slug: string;
  details: null;
} | {
  _id: string;
  _type: "practice";
  title: string;
  slug: string;
  details: null;
}>;

// Source: src/app/api/search/lawyers/route.ts
// Variable: LAWYER_SEARCH_QUERY
// Query: *[_type == "lawyer" && name match $searchQuery + "*" && ($category == "all" || category->slug.current == $category)] {    _id,    name,    title,    picture,    slug,    contactInfo {      linkedin    }  }
export type LAWYER_SEARCH_QUERYResult = Array<{
  _id: string;
  name: string;
  title: string;
  picture: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug: Slug;
  contactInfo: {
    linkedin: string | null;
  } | null;
}>;

// Source: src/sanity/lib/queries.ts
// Variable: HOME_PAGE_QUERY
// Query: {  "homePage": *[_type == "homePage"][0],  "blinkdraft": *[_type == "blinkdraft"][0]{    logo  },}
export type HOME_PAGE_QUERYResult = {
  homePage: {
    _id: string;
    _type: "homePage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string;
    hero: HeroSection;
    about: AboutSection;
    team: TeamSection;
    newsroom: NewsroomSection;
    latestPosts: LatestPostsSection;
    blinkdraft: BlinkdraftSection;
  } | null;
  blinkdraft: {
    logo: null;
  } | null;
};
// Variable: PEOPLE_PAGE_QUERY
// Query: {  "peoplePage": *[_type == "peoplePage"][0],}
export type PEOPLE_PAGE_QUERYResult = {
  peoplePage: {
    _id: string;
    _type: "peoplePage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string;
    hero: PeopleHeroSection;
    newsroom: {
      subtitle: string;
      heading: string;
      description: string;
    };
  } | null;
};
// Variable: ABOUT_US_PAGE_QUERY
// Query: {  "aboutUsPage": *[_type == "aboutUsPage"][0],}
export type ABOUT_US_PAGE_QUERYResult = {
  aboutUsPage: {
    _id: string;
    _type: "aboutUsPage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string;
    hero: AboutUsHeroSection;
    independentReviews: IndependentReviewsSection;
  } | null;
};
// Variable: CAREER_PAGE_QUERY
// Query: {  "careerPage": *[_type == "careerPage"][0] {    title,    hero {      heading,      description,      backgroundImage,      openPositionsSection {        heading,        openPositions[]->{          _id,          title,          description,          location,          pdfFile        }      }    },    coursesSection {      subtitle,      title,      courses    }  }}
export type CAREER_PAGE_QUERYResult = {
  careerPage: {
    title: string;
    hero: {
      heading: string;
      description: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
      backgroundImage: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      openPositionsSection: {
        heading: string;
        openPositions: Array<{
          _id: string;
          title: string;
          description: null;
          location: string;
          pdfFile: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
        }>;
      };
    };
    coursesSection: {
      subtitle: string;
      title: string;
      courses: Array<{
        title: string;
        readingTime: number;
        pdfFile?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        _type: "course";
        _key: string;
      }> | null;
    };
  } | null;
};
// Variable: BLINKDRAFT_PAGE_QUERY
// Query: {  "blinkdraftPage": *[_type == "blinkdraft" && language == $locale][0] {    ...,    demoSection {      subtitle,      heading,      "demoVideoPlaybackId": coalesce(        demoVideo.demoVideoAsset.asset->playbackId,         demoVideo.demoVideoId      ),      "demoVideoPoster": demoVideo.demoVideoPoster    }  }}
export type BLINKDRAFT_PAGE_QUERYResult = {
  blinkdraftPage: {
    _id: string;
    _type: "blinkdraft";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string;
    heroSection: BlinkdraftHeroSection;
    demoSection: {
      subtitle: string;
      heading: string;
      demoVideoPlaybackId: string | null;
      demoVideoPoster: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
    whatIsSection: BlinkdraftWhatIsSection;
    subscriptionPlansSection: BlinkdraftSubscriptionPlansSection;
    ctaSection: BlinkdraftCtaSection;
    packageDetailsSection: BlinkdraftPackageDetailsSection;
    additionalFeaturesSection: BlinkdraftAdditionalFeaturesSection;
    language?: string;
  } | null;
};
// Variable: BLINKDRAFT_SUBSCRIPTION_FORM_QUERY
// Query: {  "subscriptionForm": *[_type == "subscriptionForm" && language == $locale][0] {    title,    subscriptionType,    packageChoice,    languageVersion,    contactDetails,    submitButtonText,    individualTemplates  }}
export type BLINKDRAFT_SUBSCRIPTION_FORM_QUERYResult = {
  subscriptionForm: {
    title: string;
    subscriptionType: {
      label: string;
      options: {
        full: string;
        package: string;
        individual: string;
      };
    };
    packageChoice: {
      label: string;
      options: {
        amendments: string;
        compliance: string;
        breaks: string;
        hiring?: string;
        termination: string;
      };
    };
    languageVersion: {
      label: string;
      options: {
        bilingual: string;
        serbian: string;
      };
    };
    contactDetails: {
      label: string;
      fields: {
        firstName: string;
        familyName: string;
        email: string;
        position: string;
        companyName: string;
        companyAddress: string;
        numUsers: string;
      };
    };
    submitButtonText: string;
    individualTemplates: {
      label: string;
      templateGroups: Array<{
        title: string;
        templateSubgroups: Array<{
          title: string;
          templateItems: Array<string>;
          _type: "templateSubgroup";
          _key: string;
        }>;
        _type: "templateGroup";
        _key: string;
      }>;
    };
  } | null;
};
// Variable: UNIVERSAL_AUTHOR_PAGE_QUERY
// Query: *[_type == "author" && slug.current == $slug][0] {    _id,    name,    slug,    type,    "lawyerDetails": lawyer->{      title,      picture,      bio,      contactInfo {        email,        phone,        linkedin      }    },    "posts": *[      _type == "post" &&      status == "publish" &&      references(^._id)    ] | order(date desc)[0...10] {      _id,      title,      slug,      date,      categories[]->{        _id,        name,        slug      }    }  }
export type UNIVERSAL_AUTHOR_PAGE_QUERYResult = {
  _id: string;
  name: string;
  slug: Slug;
  type: "custom" | "lawyer";
  lawyerDetails: {
    title: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    bio: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    contactInfo: {
      email: string;
      phone: string;
      linkedin: string | null;
    } | null;
  } | null;
  posts: Array<{
    _id: string;
    title: string;
    slug: Slug;
    date: string;
    categories: Array<{
      _id: string;
      name: string;
      slug: Slug;
    }>;
  }>;
} | null;
// Variable: PRIVACY_NOTICE_QUERY
// Query: {  "privacyNotice": *[_type == "privacyNotice"][0] {    title,    _updatedAt,    content,    specificsOfDataProcessing[] {      title,      table    }  }}
export type PRIVACY_NOTICE_QUERYResult = {
  privacyNotice: {
    title: string;
    _updatedAt: string;
    content: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    specificsOfDataProcessing: Array<{
      title: string;
      table: Table;
    }>;
  } | null;
};
// Variable: COOKIE_POLICY_QUERY
// Query: {  "cookiePolicy": *[_type == "cookiePolicy"][0] {    title,    _updatedAt,    content,    necessaryCookies,    functionalCookies,    analyticsCookies  }}
export type COOKIE_POLICY_QUERYResult = {
  cookiePolicy: {
    title: string;
    _updatedAt: string;
    content: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    necessaryCookies: TableSection | null;
    functionalCookies: TableSection | null;
    analyticsCookies: TableSection | null;
  } | null;
};
// Variable: POSTS_PREVIEW_BY_CATEGORY_QUERY
// Query: {  "posts": *[_type == "post" && references(*[_type=="category" && slug.current == $slug]._id)] | order(date desc)[0...$limit]{    title,    slug,    date,  }}
export type POSTS_PREVIEW_BY_CATEGORY_QUERYResult = {
  posts: Array<{
    title: string;
    slug: Slug;
    date: string;
  }>;
};
// Variable: POSTS_BY_YEAR_DATETIME_QUERY
// Query: *[_type == "post" && status == "publish" && references(*[_type=="category" && slug.current == $categorySlug]._id) && date match $year + "-*"] | order(date desc)[$start...$end] {    _id,    title,    slug,    date,    categories[]->{      _id,      name,      slug    }  }
export type POSTS_BY_YEAR_DATETIME_QUERYResult = Array<{
  _id: string;
  title: string;
  slug: Slug;
  date: string;
  categories: Array<{
    _id: string;
    name: string;
    slug: Slug;
  }>;
}>;
// Variable: POSTS_BY_YEAR_COUNT_QUERY
// Query: count(*[_type == "post" && status == "publish" && references(*[_type=="category" && slug.current == $categorySlug]._id) && date match $year + "-*"])
export type POSTS_BY_YEAR_COUNT_QUERYResult = number;
// Variable: LAWYERS_QUERY
// Query: {  "lawyers": *[_type == "lawyer"]{    name,    title,    picture,    slug,    category->{      _id,      title,      slug,      order,      orderedLawyers[]->{        _id,        slug      }    },    contactInfo  }}
export type LAWYERS_QUERYResult = {
  lawyers: Array<{
    name: string;
    title: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    slug: Slug;
    category: {
      _id: string;
      title: string;
      slug: Slug;
      order: number | null;
      orderedLawyers: Array<{
        _id: string;
        slug: Slug;
      }> | null;
    };
    contactInfo: {
      email: string;
      phone: string;
      linkedin?: string;
    } | null;
  }>;
};
// Variable: LAWYERS_BY_CATEGORY_QUERY
// Query: {  "categories": *[_type == "lawyerCategory"] | order(order asc) {    _id,    title,    slug,    order,    "orderedLawyers": orderedLawyers[]->{      _id,      name,      title,      picture,      slug,      contactInfo {        linkedin      }    }  }}
export type LAWYERS_BY_CATEGORY_QUERYResult = {
  categories: Array<{
    _id: string;
    title: string;
    slug: Slug;
    order: number | null;
    orderedLawyers: Array<{
      _id: string;
      name: string;
      title: string;
      picture: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      slug: Slug;
      contactInfo: {
        linkedin: string | null;
      } | null;
    }> | null;
  }>;
};
// Variable: SERVICES_QUERY
// Query: {  "industries": *[_type == "industry"]{    title,    slug,    illustration{      desktop,      tablet,      mobile    }  },  "practices": *[_type == "practice"]{    title,    slug,    illustration{      desktop,      tablet,      mobile    }  },  "foreignDesks": *[_type == "foreignDesk"]{    title,    slug,    illustration{      desktop,      tablet,      mobile    }  }}
export type SERVICES_QUERYResult = {
  industries: Array<{
    title: string;
    slug: Slug;
    illustration: {
      desktop: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      tablet: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      mobile: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  }>;
  practices: Array<{
    title: string;
    slug: Slug;
    illustration: {
      desktop: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      tablet: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      mobile: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  }>;
  foreignDesks: Array<{
    title: string;
    slug: Slug;
    illustration: {
      desktop: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      tablet: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      mobile: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    } | null;
  }>;
};
// Variable: SERVICE_QUERY
// Query: {  "currentService": *[_type == $type && slug.current == $slug][0]{    _id,    _type,    title,    slug,    description,    illustration{      desktop,      tablet,      mobile    },    testimonials[]{      text,      author    },    publications,    lawyers[]->{      _id,      name,      title,      picture,      slug,      contactInfo    },    newsroom[]->{      _id,      title,      slug,      date,    },    "latestBlogPosts": *[_type == "post" && references(^.latestBlogPosts[]._ref)] | order(date desc)[0...4]{      _id,      title,      slug,      date,    },    "bdkInsights": *[_type == "post" && references(^.bdkInsights[]._ref)] | order(date desc)[0...4]{      _id,      title,      slug,      date,    },  },}
export type SERVICE_QUERYResult = {
  currentService: {
    _id: string;
    _type: "aboutUsPage";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "author";
    title: null;
    slug: Slug;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "blinkdraft";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "careerPage";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "category";
    title: null;
    slug: Slug;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "cookiePolicy";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "country";
    title: null;
    slug: null;
    description: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "foreignDesk";
    title: string;
    slug: Slug;
    description: {
      nativeDescription: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
      englishDescription: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
    } | null;
    illustration: {
      desktop: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      tablet: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      mobile: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    } | null;
    testimonials: null;
    publications: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }> | null;
    lawyers: Array<{
      _id: string;
      name: string;
      title: string;
      picture: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      slug: Slug;
      contactInfo: {
        email: string;
        phone: string;
        linkedin?: string;
      } | null;
    }>;
    newsroom: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }> | null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "generalInfo";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "homePage";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "industry";
    title: string;
    slug: Slug;
    description: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    illustration: {
      desktop: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      tablet: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      mobile: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
    testimonials: Array<{
      text: string;
      author: string;
    }> | null;
    publications: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }> | null;
    lawyers: Array<{
      _id: string;
      name: string;
      title: string;
      picture: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      slug: Slug;
      contactInfo: {
        email: string;
        phone: string;
        linkedin?: string;
      } | null;
    }>;
    newsroom: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }> | null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "lawyer";
    title: string;
    slug: Slug;
    description: null;
    illustration: null;
    testimonials: Array<{
      text: string;
      author: string;
    }> | null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "lawyerCategory";
    title: string;
    slug: Slug;
    description: string | null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "mux.videoAsset";
    title: null;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "openPosition";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "peoplePage";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "post";
    title: string;
    slug: Slug;
    description: null;
    illustration: null;
    testimonials: null;
    publications: {
      url?: string;
      download?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
    } | null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "practice";
    title: string;
    slug: Slug;
    description: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    illustration: {
      desktop: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      tablet: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
      mobile: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
    testimonials: Array<{
      text: string;
      author: string;
    }> | null;
    publications: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }> | null;
    lawyers: Array<{
      _id: string;
      name: string;
      title: string;
      picture: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      slug: Slug;
      contactInfo: {
        email: string;
        phone: string;
        linkedin?: string;
      } | null;
    }>;
    newsroom: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }> | null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "privacyNotice";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "sanity.fileAsset";
    title: string | null;
    slug: null;
    description: string | null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "sanity.imageAsset";
    title: string | null;
    slug: null;
    description: string | null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "subscriptionForm";
    title: string;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | {
    _id: string;
    _type: "translation.metadata";
    title: null;
    slug: null;
    description: null;
    illustration: null;
    testimonials: null;
    publications: null;
    lawyers: null;
    newsroom: null;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | null;
};
// Variable: FOREIGN_DESK_QUERY
// Query: {  "currentForeignDesk": *[_type == "foreignDesk" && slug.current == $slug][0]{    ...,    lawyers[]->{      _id,      name,      title,      picture,      slug,      contactInfo    },    newsroom[]->{      _id,      title,      slug,      date,    },    "latestBlogPosts": *[_type == "post" && references(^.latestBlogPosts[]._ref)] | order(date desc)[0...4]{      _id,      title,      slug,      date,    },    "bdkInsights": *[_type == "post" && references(^.bdkInsights[]._ref)] | order(date desc)[0...4]{      _id,      title,      slug,      date,    },  },}
export type FOREIGN_DESK_QUERYResult = {
  currentForeignDesk: {
    _id: string;
    _type: "foreignDesk";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string;
    slug: Slug;
    description?: {
      nativeDescription: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
      englishDescription: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
    };
    illustration?: Illustration;
    lawyers: Array<{
      _id: string;
      name: string;
      title: string;
      picture: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      slug: Slug;
      contactInfo: {
        email: string;
        phone: string;
        linkedin?: string;
      } | null;
    }>;
    publications?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }>;
    newsroom: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }> | null;
    latestBlogPost?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }>;
    bdkInsights: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
    latestBlogPosts: Array<{
      _id: string;
      title: string;
      slug: Slug;
      date: string;
    }>;
  } | null;
};
// Variable: AUTHORS_QUERY
// Query: *[_type == "author"] {    slug,}
export type AUTHORS_QUERYResult = Array<{
  slug: Slug;
}>;
// Variable: POSTS_QUERY_WITH_SLUGS
// Query: *[_type == "post" && status == "publish"]{  slug}
export type POSTS_QUERY_WITH_SLUGSResult = Array<{
  slug: Slug;
}>;
// Variable: POST_QUERY
// Query: {    "currentPost": *[_type == "post" && slug.current == $slug && status == "publish"][0]{      _id,      title,      slug,      date,      modified,      status,      content,      excerpt,      featuredMedia,      "publication": {        "externalUrl": publications.url,        "downloadUrl": publications.download.asset->url      },      authors[]->{        _id,        type,        name,        slug,        lawyer->{          name,          title,          picture,          slug        },      },      categories[]->{        _id,        name,        slug,        "parentCategories": parent[]->{          _id,          name,          slug,          "parentCategories": parent[]->{            _id,            name,            slug          }        }      }    },    "previousPost": *[      _type == "post"       && status == "publish"       && date < *[_type == "post" && slug.current == $slug][0].date      && references(*[_type=="category" && _id in *[_type == "post" && slug.current == $slug][0].categories[]._ref]._id)    ] | order(date desc)[0]{      title,      slug    },    "nextPost": *[      _type == "post"       && status == "publish"       && date > *[_type == "post" && slug.current == $slug][0].date      && references(*[_type=="category" && _id in *[_type == "post" && slug.current == $slug][0].categories[]._ref]._id)    ] | order(date asc)[0]{      title,      slug    },    "relatedPosts": *[      _type == "post"       && status == "publish"       && slug.current != $slug      && references(*[_type=="category" && _id in *[_type == "post" && slug.current == $slug][0].categories[]._ref]._id)    ] | order(date desc)[0...12]{      title,      slug,      date,      categories[]->{        _id,        name,        slug      }    }  }
export type POST_QUERYResult = {
  currentPost: {
    _id: string;
    title: string;
    slug: Slug;
    date: string;
    modified: string;
    status: "auto-draft" | "draft" | "future" | "inherit" | "pending" | "private" | "publish" | "trash";
    content: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    excerpt: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    featuredMedia: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    publication: {
      externalUrl: string | null;
      downloadUrl: string | null;
    };
    authors: Array<{
      _id: string;
      type: "custom" | "lawyer";
      name: string;
      slug: Slug;
      lawyer: {
        name: string;
        title: string;
        picture: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        };
        slug: Slug;
      } | null;
    }>;
    categories: Array<{
      _id: string;
      name: string;
      slug: Slug;
      parentCategories: Array<{
        _id: string;
        name: string;
        slug: Slug;
        parentCategories: Array<{
          _id: string;
          name: string;
          slug: Slug;
        }> | null;
      }> | null;
    }>;
  } | null;
  previousPost: {
    title: string;
    slug: Slug;
  } | null;
  nextPost: {
    title: string;
    slug: Slug;
  } | null;
  relatedPosts: Array<{
    title: string;
    slug: Slug;
    date: string;
    categories: Array<{
      _id: string;
      name: string;
      slug: Slug;
    }>;
  }>;
};
// Variable: GENERAL_INFO_QUERY
// Query: {  "generalInfo": *[_type == "generalInfo"][0]{    ...,    servicesCategoryIllustrations{      servicesIllustration,      practicesIllustration,      industriesIllustration,      foreignDesksIllustration    },    countries[]->{      _id,      name,      description,      countryIllustration,      address,      email,      phone,      note    }  },}
export type GENERAL_INFO_QUERYResult = {
  generalInfo: {
    _id: string;
    _type: "generalInfo";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string;
    logo: {
      logoBlack: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      logoWhite: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
    };
    blinkdraftLogo: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    servicesCategoryIllustrations: {
      servicesIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      practicesIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      industriesIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      foreignDesksIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
    };
    postCategoriesIllustrations: {
      bdknowledgeIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      blogIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      digitalWatchIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      insightsIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      publicationsIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
    };
    socials: Array<{
      _key: string;
    } & Social>;
    countries: Array<{
      _id: string;
      name: string;
      description: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
      countryIllustration: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      address: Array<{
        _key: string;
      } & ExternalImage | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }>;
      email: string;
      phone: string | null;
      note: string | null;
    }>;
  } | null;
};
// Variable: LAWYER_QUERY
// Query: {  "lawyer": *[_type == "lawyer" && slug.current == $slug][0],  "sameCategoryLawyers": *[_type == "lawyer" && category._ref == *[_type == "lawyer" && slug.current == $slug][0].category._ref && slug.current != $slug]{    _id,    name,    title,    picture,    slug,    contactInfo {      linkedin    }  },  "categoryInfo": *[_type == "lawyerCategory" && _id == *[_type == "lawyer" && slug.current == $slug][0].category._ref][0]{    _id,    title,    "orderedLawyers": orderedLawyers[]->{      _id,      slug    }  },  "newsroomPosts": *[    _type == "post"     && status == "publish"    && references(*[_type=="category" && name=="Newsroom"]._id)    && count(authors[]->{type, lawyer}[type == "lawyer" && lawyer._ref == ^.^.^._id]) > 0  ] | order(date desc)[0...4]{    title,    slug,    date  },  "blogPosts": *[    _type == "post"     && status == "publish"    && references(*[_type=="category" && name=="Blog"]._id)    && count(authors[]->{type, lawyer}[type == "lawyer" && lawyer._ref == ^.^.^._id]) > 0  ] | order(date desc)[0...4]{    title,    slug,    date  },  "insightsPosts": *[    _type == "post"     && status == "publish"    && references(*[_type=="category" && name=="Insights"]._id)    && count(authors[]->{type, lawyer}[type == "lawyer" && lawyer._ref == ^.^.^._id]) > 0  ] | order(date desc)[0...4]{    title,    slug,    date  },    "publications": *[    _type == "post"     && status == "publish"    && references(*[_type=="category" && name=="Publications"]._id)    && count(authors[]->{type, lawyer}[type == "lawyer" && lawyer._ref == ^.^.^._id]) > 0  ] | order(date desc)[0...4]{    title,    slug,    date  },}
export type LAWYER_QUERYResult = {
  lawyer: {
    _id: string;
    _type: "lawyer";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name: string;
    slug: Slug;
    title: string;
    category: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "lawyerCategory";
    };
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    contactInfo?: {
      email: string;
      phone: string;
      linkedin?: string;
    };
    bio: Array<{
      _key: string;
    } & ExternalImage | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    testimonials?: Array<{
      text: string;
      author: string;
      _type: "testimonial";
      _key: string;
    }>;
  } | null;
  sameCategoryLawyers: Array<{
    _id: string;
    name: string;
    title: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    slug: Slug;
    contactInfo: {
      linkedin: string | null;
    } | null;
  }>;
  categoryInfo: {
    _id: string;
    title: string;
    orderedLawyers: Array<{
      _id: string;
      slug: Slug;
    }> | null;
  } | null;
  newsroomPosts: Array<{
    title: string;
    slug: Slug;
    date: string;
  }>;
  blogPosts: Array<{
    title: string;
    slug: Slug;
    date: string;
  }>;
  insightsPosts: Array<{
    title: string;
    slug: Slug;
    date: string;
  }>;
  publications: Array<{
    title: string;
    slug: Slug;
    date: string;
  }>;
};
// Variable: POSTS_BY_CATEGORY_QUERY
// Query: {  "posts": *[_type == "post" && status == "publish" && ($slug == "all" || $slug == null || references(*[_type=="category" && slug.current == $slug]._id))] | order(date desc)[0...9] {    _id,    title,    slug,    date,    featuredMedia,    categories[]->{      _id,      name,      slug    }  }}
export type POSTS_BY_CATEGORY_QUERYResult = {
  posts: Array<{
    _id: string;
    title: string;
    slug: Slug;
    date: string;
    featuredMedia: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    categories: Array<{
      _id: string;
      name: string;
      slug: Slug;
    }>;
  }>;
};
// Variable: YEARS_BY_CATEGORY_QUERY
// Query: *[_type == "post" && status == "publish" && references(*[_type=="category" && slug.current == $slug]._id)].date | order(@ desc)
export type YEARS_BY_CATEGORY_QUERYResult = Array<string>;
// Variable: NESTED_CATEGORIES_QUERY
// Query: {  "rootCategory": *[_type == "category" && slug.current == $categorySlug][0]{    _id,    name,    slug,    "postCount": count(*[_type == "post" && status == "publish" && references(^._id)])  },  "allCategories": *[    _type == "category"     && count(*[_type == "post" && status == "publish" && references(^._id)]) > 0  ]{    _id,    name,    slug,    "parentRefs": parent[]._ref,    "postCount": count(*[_type == "post" && status == "publish" && references(^._id)]),    "hasChildren": count(*[_type == "category" && references(^._id) && count(*[_type == "post" && status == "publish" && references(^._id)]) > 0]) > 0  } | order(name asc)}
export type NESTED_CATEGORIES_QUERYResult = {
  rootCategory: {
    _id: string;
    name: string;
    slug: Slug;
    postCount: number;
  } | null;
  allCategories: Array<{
    _id: string;
    name: string;
    slug: Slug;
    parentRefs: Array<string> | null;
    postCount: number;
    hasChildren: boolean;
  }>;
};
// Variable: GLOBAL_FEATURED_POSTS_QUERY
// Query: *[_type == "post" && status == "publish" && ($slug == "all" || $slug == null || references(*[_type=="category" && slug.current == $slug]._id))] | order(date desc)[0...3] {    _id,    title,    slug,    excerpt,    featuredMedia,  }
export type GLOBAL_FEATURED_POSTS_QUERYResult = Array<{
  _id: string;
  title: string;
  slug: Slug;
  excerpt: Array<{
    _key: string;
  } & ExternalImage | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "highlighted" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  featuredMedia: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: PAGINATED_FILTERED_POSTS_QUERY
// Query: *[     _type == "post"    && status == "publish"    // This part filters by category.    // If $categorySlug is "all" or null, this condition is effectively ignored.    // Otherwise, it checks if the post references the specified category.    && ($categorySlug == "all" || $categorySlug == null || references(*[_type=="category" && slug.current == $categorySlug]._id))        // This part filters by year.    // If $year is null, this condition is ignored.    // Otherwise, it checks if the post's date starts with the given year string (e.g., "2023-").    && ($year == null || $year == "all" || string(date) match $year + "*")    // This part filters by author.    // If $authorId is null, this condition is ignored.    // Otherwise, it checks if the post references the specified author.    && ($authorId == null || $authorId == "all" || references(*[_type=="author" && _id == $authorId]._id))  ] | order(date desc)[$start...$end] {    _id,    title,    slug,    date,    categories[]->{      _id,      name,      slug    }  }
export type PAGINATED_FILTERED_POSTS_QUERYResult = Array<{
  _id: string;
  title: string;
  slug: Slug;
  date: string;
  categories: Array<{
    _id: string;
    name: string;
    slug: Slug;
  }>;
}>;
// Variable: PAGINATED_FILTERED_POSTS_COUNT_QUERY
// Query: count(*[    _type == "post"    && status == "publish"    && ($categorySlug == "all" || $categorySlug == null || references(*[_type=="category" && slug.current == $categorySlug]._id))    && ($year == null || $year == "all" || string(date) match $year + "*")    && ($authorId == null || $authorId == "all" || references(*[_type=="author" && _id == $authorId]._id))  ])
export type PAGINATED_FILTERED_POSTS_COUNT_QUERYResult = number;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  *[_type in [\"post\", \"lawyer\", \"industry\", \"practice\", \"foreignDesk\"] && (\n      title match $searchQuery + \"*\" ||\n      name match $searchQuery + \"*\" ||\n      pt::text(content) match $searchQuery + \"*\"\n    )\n  ] | order(_score desc) [0...10] {\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current,\n    \"details\": select(_type == \"lawyer\" => name, null)\n  }\n": GLOBAL_SEARCH_QUERYResult;
    "\n  *[_type == \"lawyer\" && name match $searchQuery + \"*\" && ($category == \"all\" || category->slug.current == $category)] {\n    _id,\n    name,\n    title,\n    picture,\n    slug,\n    contactInfo {\n      linkedin\n    }\n  }\n": LAWYER_SEARCH_QUERYResult;
    "{\n  \"homePage\": *[_type == \"homePage\"][0],\n  \"blinkdraft\": *[_type == \"blinkdraft\"][0]{\n    logo\n  },\n}": HOME_PAGE_QUERYResult;
    "{\n  \"peoplePage\": *[_type == \"peoplePage\"][0],\n}": PEOPLE_PAGE_QUERYResult;
    "{\n  \"aboutUsPage\": *[_type == \"aboutUsPage\"][0],\n}": ABOUT_US_PAGE_QUERYResult;
    "{\n  \"careerPage\": *[_type == \"careerPage\"][0] {\n    title,\n    hero {\n      heading,\n      description,\n      backgroundImage,\n      openPositionsSection {\n        heading,\n        openPositions[]->{\n          _id,\n          title,\n          description,\n          location,\n          pdfFile\n        }\n      }\n    },\n    coursesSection {\n      subtitle,\n      title,\n      courses\n    }\n  }\n}": CAREER_PAGE_QUERYResult;
    "{\n  \"blinkdraftPage\": *[_type == \"blinkdraft\" && language == $locale][0] {\n    ...,\n    demoSection {\n      subtitle,\n      heading,\n      \"demoVideoPlaybackId\": coalesce(\n        demoVideo.demoVideoAsset.asset->playbackId, \n        demoVideo.demoVideoId\n      ),\n      \"demoVideoPoster\": demoVideo.demoVideoPoster\n    }\n  }\n}": BLINKDRAFT_PAGE_QUERYResult;
    "{\n  \"subscriptionForm\": *[_type == \"subscriptionForm\" && language == $locale][0] {\n    title,\n    subscriptionType,\n    packageChoice,\n    languageVersion,\n    contactDetails,\n    submitButtonText,\n    individualTemplates\n  }\n}": BLINKDRAFT_SUBSCRIPTION_FORM_QUERYResult;
    "\n  *[_type == \"author\" && slug.current == $slug][0] {\n    _id,\n    name,\n    slug,\n    type,\n    \"lawyerDetails\": lawyer->{\n      title,\n      picture,\n      bio,\n      contactInfo {\n        email,\n        phone,\n        linkedin\n      }\n    },\n    \"posts\": *[\n      _type == \"post\" &&\n      status == \"publish\" &&\n      references(^._id)\n    ] | order(date desc)[0...10] {\n      _id,\n      title,\n      slug,\n      date,\n      categories[]->{\n        _id,\n        name,\n        slug\n      }\n    }\n  }\n": UNIVERSAL_AUTHOR_PAGE_QUERYResult;
    "{\n  \"privacyNotice\": *[_type == \"privacyNotice\"][0] {\n    title,\n    _updatedAt,\n    content,\n    specificsOfDataProcessing[] {\n      title,\n      table\n    }\n  }\n}": PRIVACY_NOTICE_QUERYResult;
    "{\n  \"cookiePolicy\": *[_type == \"cookiePolicy\"][0] {\n    title,\n    _updatedAt,\n    content,\n    necessaryCookies,\n    functionalCookies,\n    analyticsCookies\n  }\n}": COOKIE_POLICY_QUERYResult;
    "{\n  \"posts\": *[_type == \"post\" && references(*[_type==\"category\" && slug.current == $slug]._id)] | order(date desc)[0...$limit]{\n    title,\n    slug,\n    date,\n  }\n}": POSTS_PREVIEW_BY_CATEGORY_QUERYResult;
    "\n  *[_type == \"post\" && status == \"publish\" && references(*[_type==\"category\" && slug.current == $categorySlug]._id) && date match $year + \"-*\"] | order(date desc)[$start...$end] {\n    _id,\n    title,\n    slug,\n    date,\n    categories[]->{\n      _id,\n      name,\n      slug\n    }\n  }\n": POSTS_BY_YEAR_DATETIME_QUERYResult;
    "\n  count(*[_type == \"post\" && status == \"publish\" && references(*[_type==\"category\" && slug.current == $categorySlug]._id) && date match $year + \"-*\"])\n": POSTS_BY_YEAR_COUNT_QUERYResult;
    "{\n  \"lawyers\": *[_type == \"lawyer\"]{\n    name,\n    title,\n    picture,\n    slug,\n    category->{\n      _id,\n      title,\n      slug,\n      order,\n      orderedLawyers[]->{\n        _id,\n        slug\n      }\n    },\n    contactInfo\n  }\n}": LAWYERS_QUERYResult;
    "{\n  \"categories\": *[_type == \"lawyerCategory\"] | order(order asc) {\n    _id,\n    title,\n    slug,\n    order,\n    \"orderedLawyers\": orderedLawyers[]->{\n      _id,\n      name,\n      title,\n      picture,\n      slug,\n      contactInfo {\n        linkedin\n      }\n    }\n  }\n}": LAWYERS_BY_CATEGORY_QUERYResult;
    "{\n  \"industries\": *[_type == \"industry\"]{\n    title,\n    slug,\n    illustration{\n      desktop,\n      tablet,\n      mobile\n    }\n  },\n  \"practices\": *[_type == \"practice\"]{\n    title,\n    slug,\n    illustration{\n      desktop,\n      tablet,\n      mobile\n    }\n  },\n  \"foreignDesks\": *[_type == \"foreignDesk\"]{\n    title,\n    slug,\n    illustration{\n      desktop,\n      tablet,\n      mobile\n    }\n  }\n}": SERVICES_QUERYResult;
    "{\n  \"currentService\": *[_type == $type && slug.current == $slug][0]{\n    _id,\n    _type,\n    title,\n    slug,\n    description,\n    illustration{\n      desktop,\n      tablet,\n      mobile\n    },\n    testimonials[]{\n      text,\n      author\n    },\n    publications,\n    lawyers[]->{\n      _id,\n      name,\n      title,\n      picture,\n      slug,\n      contactInfo\n    },\n    newsroom[]->{\n      _id,\n      title,\n      slug,\n      date,\n    },\n    \"latestBlogPosts\": *[_type == \"post\" && references(^.latestBlogPosts[]._ref)] | order(date desc)[0...4]{\n      _id,\n      title,\n      slug,\n      date,\n    },\n    \"bdkInsights\": *[_type == \"post\" && references(^.bdkInsights[]._ref)] | order(date desc)[0...4]{\n      _id,\n      title,\n      slug,\n      date,\n    },\n  },\n}": SERVICE_QUERYResult;
    "{\n  \"currentForeignDesk\": *[_type == \"foreignDesk\" && slug.current == $slug][0]{\n    ...,\n    lawyers[]->{\n      _id,\n      name,\n      title,\n      picture,\n      slug,\n      contactInfo\n    },\n    newsroom[]->{\n      _id,\n      title,\n      slug,\n      date,\n    },\n    \"latestBlogPosts\": *[_type == \"post\" && references(^.latestBlogPosts[]._ref)] | order(date desc)[0...4]{\n      _id,\n      title,\n      slug,\n      date,\n    },\n    \"bdkInsights\": *[_type == \"post\" && references(^.bdkInsights[]._ref)] | order(date desc)[0...4]{\n      _id,\n      title,\n      slug,\n      date,\n    },\n  },\n}": FOREIGN_DESK_QUERYResult;
    "*[_type == \"author\"] {\n    slug,\n}": AUTHORS_QUERYResult;
    "*[_type == \"post\" && status == \"publish\"]{\n  slug\n}": POSTS_QUERY_WITH_SLUGSResult;
    "{\n    \"currentPost\": *[_type == \"post\" && slug.current == $slug && status == \"publish\"][0]{\n      _id,\n      title,\n      slug,\n      date,\n      modified,\n      status,\n      content,\n      excerpt,\n      featuredMedia,\n      \"publication\": {\n        \"externalUrl\": publications.url,\n        \"downloadUrl\": publications.download.asset->url\n      },\n      authors[]->{\n        _id,\n        type,\n        name,\n        slug,\n        lawyer->{\n          name,\n          title,\n          picture,\n          slug\n        },\n      },\n      categories[]->{\n        _id,\n        name,\n        slug,\n        \"parentCategories\": parent[]->{\n          _id,\n          name,\n          slug,\n          \"parentCategories\": parent[]->{\n            _id,\n            name,\n            slug\n          }\n        }\n      }\n    },\n    \"previousPost\": *[\n      _type == \"post\" \n      && status == \"publish\" \n      && date < *[_type == \"post\" && slug.current == $slug][0].date\n      && references(*[_type==\"category\" && _id in *[_type == \"post\" && slug.current == $slug][0].categories[]._ref]._id)\n    ] | order(date desc)[0]{\n      title,\n      slug\n    },\n    \"nextPost\": *[\n      _type == \"post\" \n      && status == \"publish\" \n      && date > *[_type == \"post\" && slug.current == $slug][0].date\n      && references(*[_type==\"category\" && _id in *[_type == \"post\" && slug.current == $slug][0].categories[]._ref]._id)\n    ] | order(date asc)[0]{\n      title,\n      slug\n    },\n    \"relatedPosts\": *[\n      _type == \"post\" \n      && status == \"publish\" \n      && slug.current != $slug\n      && references(*[_type==\"category\" && _id in *[_type == \"post\" && slug.current == $slug][0].categories[]._ref]._id)\n    ] | order(date desc)[0...12]{\n      title,\n      slug,\n      date,\n      categories[]->{\n        _id,\n        name,\n        slug\n      }\n    }\n  }": POST_QUERYResult;
    "{\n  \"generalInfo\": *[_type == \"generalInfo\"][0]{\n    ...,\n    servicesCategoryIllustrations{\n      servicesIllustration,\n      practicesIllustration,\n      industriesIllustration,\n      foreignDesksIllustration\n    },\n    countries[]->{\n      _id,\n      name,\n      description,\n      countryIllustration,\n      address,\n      email,\n      phone,\n      note\n    }\n  },\n}": GENERAL_INFO_QUERYResult;
    "{\n  \"lawyer\": *[_type == \"lawyer\" && slug.current == $slug][0],\n  \"sameCategoryLawyers\": *[_type == \"lawyer\" && category._ref == *[_type == \"lawyer\" && slug.current == $slug][0].category._ref && slug.current != $slug]{\n    _id,\n    name,\n    title,\n    picture,\n    slug,\n    contactInfo {\n      linkedin\n    }\n  },\n  \"categoryInfo\": *[_type == \"lawyerCategory\" && _id == *[_type == \"lawyer\" && slug.current == $slug][0].category._ref][0]{\n    _id,\n    title,\n    \"orderedLawyers\": orderedLawyers[]->{\n      _id,\n      slug\n    }\n  },\n  \"newsroomPosts\": *[\n    _type == \"post\" \n    && status == \"publish\"\n    && references(*[_type==\"category\" && name==\"Newsroom\"]._id)\n    && count(authors[]->{type, lawyer}[type == \"lawyer\" && lawyer._ref == ^.^.^._id]) > 0\n  ] | order(date desc)[0...4]{\n    title,\n    slug,\n    date\n  },\n  \"blogPosts\": *[\n    _type == \"post\" \n    && status == \"publish\"\n    && references(*[_type==\"category\" && name==\"Blog\"]._id)\n    && count(authors[]->{type, lawyer}[type == \"lawyer\" && lawyer._ref == ^.^.^._id]) > 0\n  ] | order(date desc)[0...4]{\n    title,\n    slug,\n    date\n  },\n  \"insightsPosts\": *[\n    _type == \"post\" \n    && status == \"publish\"\n    && references(*[_type==\"category\" && name==\"Insights\"]._id)\n    && count(authors[]->{type, lawyer}[type == \"lawyer\" && lawyer._ref == ^.^.^._id]) > 0\n  ] | order(date desc)[0...4]{\n    title,\n    slug,\n    date\n  },  \n  \"publications\": *[\n    _type == \"post\" \n    && status == \"publish\"\n    && references(*[_type==\"category\" && name==\"Publications\"]._id)\n    && count(authors[]->{type, lawyer}[type == \"lawyer\" && lawyer._ref == ^.^.^._id]) > 0\n  ] | order(date desc)[0...4]{\n    title,\n    slug,\n    date\n  },\n}": LAWYER_QUERYResult;
    "{\n  \"posts\": *[_type == \"post\" && status == \"publish\" && ($slug == \"all\" || $slug == null || references(*[_type==\"category\" && slug.current == $slug]._id))] | order(date desc)[0...9] {\n    _id,\n    title,\n    slug,\n    date,\n    featuredMedia,\n    categories[]->{\n      _id,\n      name,\n      slug\n    }\n  }\n}": POSTS_BY_CATEGORY_QUERYResult;
    "\n  *[_type == \"post\" && status == \"publish\" && references(*[_type==\"category\" && slug.current == $slug]._id)].date | order(@ desc)\n": YEARS_BY_CATEGORY_QUERYResult;
    "{\n  \"rootCategory\": *[_type == \"category\" && slug.current == $categorySlug][0]{\n    _id,\n    name,\n    slug,\n    \"postCount\": count(*[_type == \"post\" && status == \"publish\" && references(^._id)])\n  },\n  \"allCategories\": *[\n    _type == \"category\" \n    && count(*[_type == \"post\" && status == \"publish\" && references(^._id)]) > 0\n  ]{\n    _id,\n    name,\n    slug,\n    \"parentRefs\": parent[]._ref,\n    \"postCount\": count(*[_type == \"post\" && status == \"publish\" && references(^._id)]),\n    \"hasChildren\": count(*[_type == \"category\" && references(^._id) && count(*[_type == \"post\" && status == \"publish\" && references(^._id)]) > 0]) > 0\n  } | order(name asc)\n}": NESTED_CATEGORIES_QUERYResult;
    "\n  *[_type == \"post\" && status == \"publish\" && ($slug == \"all\" || $slug == null || references(*[_type==\"category\" && slug.current == $slug]._id))] | order(date desc)[0...3] {\n    _id,\n    title,\n    slug,\n    excerpt,\n    featuredMedia,\n  }\n": GLOBAL_FEATURED_POSTS_QUERYResult;
    "\n  *[ \n    _type == \"post\"\n    && status == \"publish\"\n    // This part filters by category.\n    // If $categorySlug is \"all\" or null, this condition is effectively ignored.\n    // Otherwise, it checks if the post references the specified category.\n    && ($categorySlug == \"all\" || $categorySlug == null || references(*[_type==\"category\" && slug.current == $categorySlug]._id))\n    \n    // This part filters by year.\n    // If $year is null, this condition is ignored.\n    // Otherwise, it checks if the post's date starts with the given year string (e.g., \"2023-\").\n    && ($year == null || $year == \"all\" || string(date) match $year + \"*\")\n\n    // This part filters by author.\n    // If $authorId is null, this condition is ignored.\n    // Otherwise, it checks if the post references the specified author.\n    && ($authorId == null || $authorId == \"all\" || references(*[_type==\"author\" && _id == $authorId]._id))\n  ] | order(date desc)[$start...$end] {\n    _id,\n    title,\n    slug,\n    date,\n    categories[]->{\n      _id,\n      name,\n      slug\n    }\n  }\n": PAGINATED_FILTERED_POSTS_QUERYResult;
    "\n  count(*[\n    _type == \"post\"\n    && status == \"publish\"\n    && ($categorySlug == \"all\" || $categorySlug == null || references(*[_type==\"category\" && slug.current == $categorySlug]._id))\n    && ($year == null || $year == \"all\" || string(date) match $year + \"*\")\n    && ($authorId == null || $authorId == \"all\" || references(*[_type==\"author\" && _id == $authorId]._id))\n  ])\n": PAGINATED_FILTERED_POSTS_COUNT_QUERYResult;
  }
}
